spring:
  application:
    name: brokerage-service

  # Database Configuration - H2 as per requirements
  datasource:
    url: jdbc:h2:mem:brokeragedb
    username: sa
    password: password
    driver-class-name: org.h2.Driver

  # JPA and Hibernate Configuration
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  # H2 Console Configuration
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true  # Allow access from Docker

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null

  # Kafka Configuration
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: brokerage-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.brokerage.event
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  # Cache Configuration
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=60s

# Server Configuration
server:
  port: 8080

# Security Configuration
security:
  jwt:
    secret: YOUR_SECRET_KEY_HERE_SHOULD_BE_VERY_LONG_AND_SECURE_FOR_PRODUCTION
    expiration: 86400000 # 24 hours in milliseconds

# Application-specific settings
brokerage:
  admin:
    username: admin
    password: admin
  order:
    events:
      topic: order-events

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      kafkaPublisher:
        registerHealthIndicator: true
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        failureRateThreshold: 50
        waitDurationInOpenState: 30s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
  retry:
    instances:
      kafkaPublishRetry:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - org.springframework.kafka.KafkaException
          - java.io.IOException
          - java.net.SocketTimeoutException

# Logging configuration
logging:
  level:
    root: INFO
    com.brokerage: DEBUG
    org.springframework.cache: DEBUG
    org.springframework.kafka: INFO
    io.github.resilience4j: DEBUG

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev
  # All settings inherited from default profile

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
  # All settings inherited from default profile, only Kafka settings may change
  kafka:
    bootstrap-servers: kafka:9092